name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '20 13 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: manual
        - language: java-kotlin
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.language == 'c-cpp'
      name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential ninja-build

    - if: matrix.build-mode == 'manual' && matrix.language == 'c-cpp'
      name: Build project (C/C++)
      shell: bash
      run: |
        mkdir -p build
        cd build
        cmake .. -G"Ninja"
        ninja

    - if: matrix.build-mode == 'manual' && matrix.language == 'java-kotlin'
      name: Build project (Java/Kotlin)
      shell: bash
      run: |
        # Replace these commands with the appropriate build steps for your Java/Kotlin project
        echo 'Building Java/Kotlin project...'
        # For example:
        # ./gradlew build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
